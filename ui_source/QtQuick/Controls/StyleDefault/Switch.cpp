// This code is auto-generated by Qul's qmltocpp tool from the file 'Switch.qml'
// WARNING! All changes made in this file will be lost!
#include "Switch.h"
#include <qul/private/graphicsdevice.h>
#include <qul/private/filecache.h>

extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_switch_2Dbg_12628494062263596380_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_switch_2Di_18398203682163942849_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_switch_2Do_16909354190531363769_handle;
extern const Qul::Private::RasterBuffer *const qul_rasterBuffer_switch_2Dhandle_3494590952183651764_handle;
static const Qul::Private::String qulCurrentFileDir(".", 1);
namespace QtQuick {
namespace Controls {
namespace StyleDefault {
extern Qul::Private::Items::ItemBase *loaderItemAllocator(const Qul::Private::String &uri, const Qul::Private::String &currentFileDir);

} // namespace QtQuick
} // namespace Controls
} // namespace StyleDefault
namespace Qul { namespace Private {
Qul::Property<int> &translationIndexProperty_da39a3ee5e6b4b0d3255bfef95601890afd80709();
extern const uint32_t *qul_translation_offsets_85208706b5c5f0d72d0ed49465086aa754a6314a();
extern const uint8_t *qul_translations_85208706b5c5f0d72d0ed49465086aa754a6314a();
}}

namespace QtQuick {
namespace Controls {
namespace StyleDefault {

namespace {
#if defined(QUL_CC_IAR)
#pragma diag_suppress=Pe177 // declared but never referenced
#elif defined(QUL_CC_GNU)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#endif
static Qul::Property<int> &translationIndexProperty() { return Qul::Private::translationIndexProperty_da39a3ee5e6b4b0d3255bfef95601890afd80709(); }
static int translationIndex() { return translationIndexProperty().value(); }
static const char *qul_translation(int entry) {
    const size_t translationLanguageCount = 1;
    const uint32_t *offsets = Qul::Private::qul_translation_offsets_85208706b5c5f0d72d0ed49465086aa754a6314a();
    const uint8_t *translations = Qul::Private::qul_translations_85208706b5c5f0d72d0ed49465086aa754a6314a();
    return reinterpret_cast<const char *>(&translations[offsets[entry * translationLanguageCount + translationIndex()]]);
}
#if defined(QUL_CC_IAR)
#pragma diag_default=Pe177 // declared but never referenced
#elif defined(QUL_CC_GNU)
#pragma GCC diagnostic pop
#endif
}


int Switch::Switch_1035992415_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    int r2_1;
    QUL_DECL_UNUSED Switch * r2 = NULL;
    QUL_DECL_UNUSED Qul::Private::Items::ItemBase * r2__indicator = NULL;
    int r7__indicator_width;
    // implicitWidth: control.indicator ? control.indicator.width + control.spacing : 0
    // line 90  "Switch.qml"
    r2 = self;
    r2__indicator = r2->indicator.value();
    if (!r2__indicator) {
    goto label_0;};
    r2 = self;
    r2__indicator = r2->indicator.value();
    r2_1 = r2__indicator->width.value();
    r7__indicator_width = r2_1;
    r2 = self;
    r2_1 = r2->spacing.value();
    r2_1 = r7__indicator_width + r2_1;
    goto label_1;;
    {
    }
    label_0:;
    r2_1 = 0;
    label_1:;
    return r2_1;
    
}
int Switch::text__y_anchor_bindingFunctor::operator()(Switch *self) const {
        return int((int(self->row.height.value()) + 1)/2 - ((self->text_.height.value())/2.0));
}
Qul::PlatformInterface::Rgba32 Switch::Switch_654254210_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::PlatformInterface::Rgba32 r2__disabledTextColor;
    bool r2__enabled;
    QUL_DECL_UNUSED  ::QtQuick::Controls::StyleDefault::DefaultStyle * r2_3 = NULL;
    QUL_DECL_UNUSED Switch * r2 = NULL;
    // color: control.enabled ? DefaultStyle.textColor : DefaultStyle.disabledTextColor
    // line 96  "Switch.qml"
    r2 = self;
    r2__enabled = r2->enabled.value();
    if (!r2__enabled) goto label_0;;
    r2_3 = & ::QtQuick::Controls::StyleDefault::DefaultStyle ::instance();
    r2__disabledTextColor = r2_3->textColor.value();
    goto label_1;;
    label_0:;
    r2_3 = & ::QtQuick::Controls::StyleDefault::DefaultStyle ::instance();
    r2__disabledTextColor = r2_3->disabledTextColor.value();
    label_1:;
    return r2__disabledTextColor;
    
}
Qul::Private::FontPointer Switch::Switch_3537330082_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::FontPointer r2__font;
    QUL_DECL_UNUSED Switch * r2 = NULL;
    // font: control.font
    // line 95  "Switch.qml"
    r2 = self;
    r2__font = r2->font.value();
    return r2__font;
    
}
Qul::Private::String Switch::Switch_65258397_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::String r2__text;
    QUL_DECL_UNUSED Switch * r2 = NULL;
    // text: control.text
    // line 94  "Switch.qml"
    r2 = self;
    r2__text = r2->text.value();
    return r2__text;
    
}
Qul::PlatformInterface::Rgba32 Switch::Switch_4147903454_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    bool r2;
    QUL_DECL_UNUSED Qul::Private::String r2_1;
    // color: checked ? "#5ae0aa" : "#c4c9cc"
    // line 54  "Switch.qml"
    r2 = self->checked.value();
    if (!r2) goto label_0;;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("#5ae0aa", 7, 0xff5ae0aa));
    goto label_1;;
    label_0:;
    r2_1 = Qul::Private::String(Qul::Private::ColorIdString("#c4c9cc", 7, 0xffc4c9cc));
    label_1:;
    return (r2_1).toRgba32();
    
}
int Switch::Switch_4169422798_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    int r8__availableHeight;
    int r2_2;
    Qul::qreal r2_1;
    QUL_DECL_UNUSED Switch * r2 = NULL;
    int r9;
    int r7__topPadding;
    // y: control.topPadding + (control.availableHeight - height) / 2
    // line 53  "Switch.qml"
    r2 = self;
    r2_2 = r2->topPadding.value();
    r7__topPadding = r2_2;
    r2 = self;
    r2_2 = r2->availableHeight.value();
    r8__availableHeight = r2_2;
    r2_2 = self->colorizedimage.height.value();
    r2_2 = r8__availableHeight - r2_2;
    r9 = r2_2;
    r2_2 = 2;
    r2_1 = Qul::qreal(r9) / r2_2;
    r2_1 = r7__topPadding + r2_1;
    return int(r2_1);
    
}
int Switch::Switch_4260820959_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    int r2__leftPadding;
    QUL_DECL_UNUSED Switch * r2 = NULL;
    // x: control.leftPadding
    // line 52  "Switch.qml"
    r2 = self;
    r2__leftPadding = r2->leftPadding.value();
    return r2__leftPadding;
    
}
int Switch::image_y_anchor_bindingFunctor::operator()(Switch *self) const {
        return int((int(self->colorizedimage.height.value()) + 1)/2 - ((self->image.height.value())/2.0));
}
int Switch::Switch_1347771666_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    Qul::qreal r8;
    QUL_DECL_UNUSED colorizedimage_ColorizedImage * r2 = NULL;
    int r2_2;
    Qul::qreal r2_1;
    int r9;
    int r7__width;
    // x: parent.width * 0.25 - width / 2
    // line 59  "Switch.qml"
    r2 = self->image.parent<colorizedimage_ColorizedImage >();
    r2_2 = r2->width.value();
    r7__width = r2_2;
    r2_1 = 0.25000000000000000;
    r2_1 = r7__width * r2_1;
    r8 = r2_1;
    r2_2 = self->image.width.value();
    r9 = r2_2;
    r2_2 = 2;
    r2_1 = Qul::qreal(r9) / r2_2;
    r2_1 = r8 - r2_1;
    return int(r2_1);
    
}
int Switch::image_2_y_anchor_bindingFunctor::operator()(Switch *self) const {
        return int((int(self->colorizedimage.height.value()) + 1)/2 - ((self->image_2.height.value())/2.0));
}
int Switch::Switch_1553820945_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    Qul::qreal r8;
    QUL_DECL_UNUSED colorizedimage_ColorizedImage * r2 = NULL;
    int r2_2;
    Qul::qreal r2_1;
    int r9;
    int r7__width;
    // x: parent.width * 0.75 - width / 2
    // line 64  "Switch.qml"
    r2 = self->image_2.parent<colorizedimage_ColorizedImage >();
    r2_2 = r2->width.value();
    r7__width = r2_2;
    r2_1 = 0.75000000000000000;
    r2_1 = r7__width * r2_1;
    r8 = r2_1;
    r2_2 = self->image_2.width.value();
    r9 = r2_2;
    r2_2 = 2;
    r2_1 = Qul::qreal(r9) / r2_2;
    r2_1 = r8 - r2_1;
    return int(r2_1);
    
}
int Switch::image_3_y_anchor_bindingFunctor::operator()(Switch *self) const {
        return int((int(self->colorizedimage.height.value()) + 1)/2 + (5) - ((self->image_3.height.value())/2.0));
}
int Switch::Switch_3334378452_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    int r19;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r7 = NULL;
    Qul::qreal r16;
    int r2_1;
    QUL_DECL_UNUSED colorizedimage_ColorizedImage * r2_3 = NULL;
    Qul::qreal r2__visualPosition;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2 = NULL;
    QUL_DECL_UNUSED Switch * r2_4 = NULL;
    int r10;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r12 = NULL;
    int r17__width;
    Qul::qreal r17__visualPosition;
    int r15;
    Qul::qreal r11;
    int r18;
    Qul::qreal r18_1;
    // x: Math.max(-8, Math.min((parent.width - width) + 8,
    // line 72  "Switch.qml"
    r2 = &Qul::Private::Builtins::Math ::instance();
    r7 = r2;
    r10 = -8;
    r2 = &Qul::Private::Builtins::Math ::instance();
    r12 = r2;
    r2_3 = self->image_3.parent<colorizedimage_ColorizedImage >();
    r2_1 = r2_3->width.value();
    r17__width = r2_1;
    r2_1 = self->image_3.width.value();
    r2_1 = r17__width - r2_1;
    r18 = r2_1;
    r2_1 = 8;
    r2_1 = r18 + r2_1;
    r15 = r2_1;
    r2_4 = self;
    r2__visualPosition = r2_4->visualPosition.value();
    r17__visualPosition = r2__visualPosition;
    r2_3 = self->image_3.parent<colorizedimage_ColorizedImage >();
    r2_1 = r2_3->width.value();
    r2__visualPosition = r17__visualPosition * r2_1;
    r18_1 = r2__visualPosition;
    r2_1 = self->image_3.width.value();
    r19 = r2_1;
    r2_1 = 2;
    r2__visualPosition = Qul::qreal(r19) / r2_1;
    r2__visualPosition = r18_1 - r2__visualPosition;
    r16 = r2__visualPosition;
    r2__visualPosition = r12->min(r15, r16);
    r11 = r2__visualPosition;
    r2__visualPosition = r7->max(r10, r11);
    // control.visualPosition * parent.width - (width / 2)))
    // line 73  "Switch.qml"
    return int(r2__visualPosition);
    
}
int Switch::Switch_3560203182_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r7 = NULL;
    int r13;
    int r16;
    int r2_1;
    Qul::qreal r2_3;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2 = NULL;
    QUL_DECL_UNUSED Qul::Private::Items::ItemBase * r2_2 = NULL;
    int r10;
    int r12_1;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r12 = NULL;
    int r17;
    int r15;
    Qul::qreal r11;
    int r18;
    // implicitHeight: Math.max((background ? background.implicitHeight : 0) + topInset + bottomInset,
    // line 35  "Switch.qml"
    r2 = &Qul::Private::Builtins::Math ::instance();
    r7 = r2;
    r2_2 = self->background.value();
    if (!r2_2) goto label_0;;
    r2_2 = self->background.value();
    r2_1 = r2_2->itemExtraProperties->implicitHeight.value();
    goto label_1;;
    label_0:;
    r2_1 = 0;
    label_1:;
    r12_1 = r2_1;
    r2_1 = self->topInset.value();
    r2_1 = r12_1 + r2_1;
    r13 = r2_1;
    r2_1 = self->bottomInset.value();
    r2_1 = r13 + r2_1;
    r10 = r2_1;
    r2 = &Qul::Private::Builtins::Math ::instance();
    r12 = r2;
    // Math.max((contentItem ? contentItem.implicitHeight : 0) + topPadding + bottomPadding,
    // line 36  "Switch.qml"
    r2_2 = self->contentItem.value();
    if (!r2_2) goto label_2;;
    r2_2 = self->contentItem.value();
    r2_1 = r2_2->itemExtraProperties->implicitHeight.value();
    goto label_3;;
    label_2:;
    r2_1 = 0;
    label_3:;
    r17 = r2_1;
    r2_1 = self->topPadding.value();
    r2_1 = r17 + r2_1;
    r18 = r2_1;
    r2_1 = self->bottomPadding.value();
    r2_1 = r18 + r2_1;
    r15 = r2_1;
    // (indicator ? indicator.implicitHeight : 0) + topPadding + bottomPadding))
    // line 37  "Switch.qml"
    r2_2 = self->indicator.value();
    if (!r2_2) goto label_4;;
    r2_2 = self->indicator.value();
    r2_1 = r2_2->itemExtraProperties->implicitHeight.value();
    goto label_5;;
    label_4:;
    r2_1 = 0;
    label_5:;
    r17 = r2_1;
    r2_1 = self->topPadding.value();
    r2_1 = r17 + r2_1;
    r18 = r2_1;
    r2_1 = self->bottomPadding.value();
    r2_1 = r18 + r2_1;
    r16 = r2_1;
    r2_3 = r12->max(r15, r16);
    r11 = r2_3;
    r2_3 = r7->max(r10, r11);
    return int(r2_3);
    
}
int Switch::Switch_2791446706_bindingFunctor::operator()(Switch *self) const
{
    (void) self;
    int r2_2;
    Qul::qreal r2_1;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2 = NULL;
    QUL_DECL_UNUSED Qul::Private::Items::ItemBase * r2_3 = NULL;
    int r10;
    int r12;
    int r11;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r7 = NULL;
    int r13;
    // implicitWidth: Math.max((background ? background.implicitWidth : 0) + leftInset + rightInset,
    // line 29  "Switch.qml"
    r2 = &Qul::Private::Builtins::Math ::instance();
    r7 = r2;
    r2_3 = self->background.value();
    if (!r2_3) goto label_0;;
    r2_3 = self->background.value();
    r2_2 = r2_3->itemExtraProperties->implicitWidth.value();
    goto label_1;;
    label_0:;
    r2_2 = 0;
    label_1:;
    r12 = r2_2;
    r2_2 = self->leftInset.value();
    r2_2 = r12 + r2_2;
    r13 = r2_2;
    r2_2 = self->rightInset.value();
    r2_2 = r13 + r2_2;
    r10 = r2_2;
    // (contentItem ? contentItem.implicitWidth : 0) + leftPadding + rightPadding)
    // line 30  "Switch.qml"
    r2_3 = self->contentItem.value();
    if (!r2_3) goto label_2;;
    r2_3 = self->contentItem.value();
    r2_2 = r2_3->itemExtraProperties->implicitWidth.value();
    goto label_3;;
    label_2:;
    r2_2 = 0;
    label_3:;
    r12 = r2_2;
    r2_2 = self->leftPadding.value();
    r2_2 = r12 + r2_2;
    r13 = r2_2;
    r2_2 = self->rightPadding.value();
    r2_2 = r13 + r2_2;
    r11 = r2_2;
    r2_1 = r7->max(r10, r11);
    return int(r2_1);
    
}

Switch::Switch()

    : Qul::Private::Items::ItemBase ::ExtraStorage_itemExtraProperties<Qul::Private::Controls::Templates::Switch  >(this)
    , item__2_implicitWidth_binding(Switch_1035992415_bindingFunctor())
    , text__y_anchor_binding(text__y_anchor_bindingFunctor())
    , text__color_binding(Switch_654254210_bindingFunctor())
    , font_font_binding(Switch_3537330082_bindingFunctor())
    , text__text_binding(Switch_65258397_bindingFunctor())
    , colorizedimage_color_binding(Switch_4147903454_bindingFunctor())
    , colorizedimage_y_binding(Switch_4169422798_bindingFunctor())
    , colorizedimage_x_binding(Switch_4260820959_bindingFunctor())
    , image_y_anchor_binding(image_y_anchor_bindingFunctor())
    , image_x_binding(Switch_1347771666_bindingFunctor())
    , image_2_y_anchor_binding(image_2_y_anchor_bindingFunctor())
    , image_2_x_binding(Switch_1553820945_bindingFunctor())
    , image_3_y_anchor_binding(image_3_y_anchor_bindingFunctor())
    , image_3_x_binding(Switch_3334378452_bindingFunctor())
    , _implicitHeight_binding(Switch_3560203182_bindingFunctor())
    , _implicitWidth_binding(Switch_2791446706_bindingFunctor())
{
    // Item {
    // line 89  "Switch.qml"
    appendChild(&this->row, &item__2);
    item__2_implicitWidth_binding.init<Switch, &Switch::item__2_implicitWidth_binding>(item__2.itemExtraProperties->implicitWidth);
    // implicitWidth: control.indicator ? control.indicator.width + control.spacing : 0
    // line 90  "Switch.qml"
    item__2.itemExtraProperties->implicitWidth.setBinding (&item__2_implicitWidth_binding);
    // Text {
    // line 93  "Switch.qml"
    appendChild(&this->row, &text_);
    text__y_anchor_binding.init<Switch, &Switch::text__y_anchor_binding>(text_.y);
    text_.y.setBinding(&text__y_anchor_binding);
    text__color_binding.init<Switch, &Switch::text__color_binding>(text_.color);
    // color: control.enabled ? DefaultStyle.textColor : DefaultStyle.disabledTextColor
    // line 96  "Switch.qml"
    text_.color.setBinding (&text__color_binding);
    font_font_binding.init<Switch, &Switch::font_font_binding>(text_.font);
    // font: control.font
    // line 95  "Switch.qml"
    text_.font.setBinding (&font_font_binding);
    text__text_binding.init<Switch, &Switch::text__text_binding>(text_.text);
    // text: control.text
    // line 94  "Switch.qml"
    text_.text.setBinding (&text__text_binding);
    // contentItem: Row {
    // line 88  "Switch.qml"
    contentItem.setValue(&row);
    // implicitHeight: 42
    // line 84  "Switch.qml"
    item_.itemExtraProperties->implicitHeight.setValue(42);
    // implicitWidth: 100
    // line 83  "Switch.qml"
    item_.itemExtraProperties->implicitWidth.setValue(100);
    // background: Item {
    // line 82  "Switch.qml"
    background.setValue(&item_);
    // source: "qrc:/images/switch-bg.png"
    // line 55  "Switch.qml"
    colorizedimage.source.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_switch_2Dbg_12628494062263596380_handle));
    colorizedimage_color_binding.init<Switch, &Switch::colorizedimage_color_binding>(colorizedimage.color);
    // color: checked ? "#5ae0aa" : "#c4c9cc"
    // line 54  "Switch.qml"
    colorizedimage.color.setBinding (&colorizedimage_color_binding);
    colorizedimage_y_binding.init<Switch, &Switch::colorizedimage_y_binding>(colorizedimage.y);
    // y: control.topPadding + (control.availableHeight - height) / 2
    // line 53  "Switch.qml"
    colorizedimage.y.setBinding (&colorizedimage_y_binding);
    colorizedimage_x_binding.init<Switch, &Switch::colorizedimage_x_binding>(colorizedimage.x);
    // x: control.leftPadding
    // line 52  "Switch.qml"
    colorizedimage.x.setBinding (&colorizedimage_x_binding);
    // Image {
    // line 58  "Switch.qml"
    appendChild(&this->colorizedimage, &image);
    image_y_anchor_binding.init<Switch, &Switch::image_y_anchor_binding>(image.y);
    image.y.setBinding(&image_y_anchor_binding);
    // source: "qrc:/images/switch-i.png"
    // line 60  "Switch.qml"
    image.source.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_switch_2Di_18398203682163942849_handle));
    image_x_binding.init<Switch, &Switch::image_x_binding>(image.x);
    // x: parent.width * 0.25 - width / 2
    // line 59  "Switch.qml"
    image.x.setBinding (&image_x_binding);
    // Image {
    // line 63  "Switch.qml"
    appendChild(&this->colorizedimage, &image_2);
    image_2_y_anchor_binding.init<Switch, &Switch::image_2_y_anchor_binding>(image_2.y);
    image_2.y.setBinding(&image_2_y_anchor_binding);
    // source: "qrc:/images/switch-o.png"
    // line 65  "Switch.qml"
    image_2.source.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_switch_2Do_16909354190531363769_handle));
    image_2_x_binding.init<Switch, &Switch::image_2_x_binding>(image_2.x);
    // x: parent.width * 0.75 - width / 2
    // line 64  "Switch.qml"
    image_2.x.setBinding (&image_2_x_binding);
    // Image {
    // line 69  "Switch.qml"
    appendChild(&this->colorizedimage, &image_3);
    // Behavior on x { NumberAnimation { duration: 150 } }
    // line 77  "Switch.qml"
    appendChild(&this->behavior, &numberanimation);
    // Behavior on x { NumberAnimation { duration: 150 } }
    // line 77  "Switch.qml"
    numberanimation.duration.setValue(150);
    image_3_y_anchor_binding.init<Switch, &Switch::image_3_y_anchor_binding>(image_3.y);
    image_3.y.setBinding(&image_3_y_anchor_binding);
    image_3_x_binding.init<Switch, &Switch::image_3_x_binding>(image_3.x);
    // x: Math.max(-8, Math.min((parent.width - width) + 8,
    // line 72  "Switch.qml"
    image_3.x.setBinding (&image_3_x_binding);
    // source: "qrc:/images/switch-handle.png"
    // line 70  "Switch.qml"
    image_3.source.setValue(Qul::Private::ImagePrivate::fromRasterBuffer(qul_rasterBuffer_switch_2Dhandle_3494590952183651764_handle));
    // indicator: ColorizedImage {
    // line 51  "Switch.qml"
    indicator.setValue(&colorizedimage);
    // spacing: 10
    // line 49  "Switch.qml"
    spacing.setValue(10);
    // bottomInset: DefaultStyle.inset
    // line 47  "Switch.qml"
    bottomInset.setValue(5);
    // rightInset: DefaultStyle.inset
    // line 46  "Switch.qml"
    rightInset.setValue(5);
    // topInset: DefaultStyle.inset
    // line 45  "Switch.qml"
    topInset.setValue(5);
    // leftInset: DefaultStyle.inset
    // line 44  "Switch.qml"
    leftInset.setValue(5);
    // bottomPadding: DefaultStyle.padding
    // line 42  "Switch.qml"
    bottomPadding.setValue(5);
    // topPadding: DefaultStyle.padding
    // line 41  "Switch.qml"
    topPadding.setValue(5);
    // rightPadding: DefaultStyle.padding
    // line 40  "Switch.qml"
    rightPadding.setValue(5);
    // leftPadding: DefaultStyle.padding
    // line 39  "Switch.qml"
    leftPadding.setValue(5);
    _implicitHeight_binding.init<Switch, &Switch::_implicitHeight_binding>(itemExtraProperties->implicitHeight);
    // implicitHeight: Math.max((background ? background.implicitHeight : 0) + topInset + bottomInset,
    // line 35  "Switch.qml"
    itemExtraProperties->implicitHeight.setBinding (&_implicitHeight_binding);
    _implicitWidth_binding.init<Switch, &Switch::_implicitWidth_binding>(itemExtraProperties->implicitWidth);
    // implicitWidth: Math.max((background ? background.implicitWidth : 0) + leftInset + rightInset,
    // line 29  "Switch.qml"
    itemExtraProperties->implicitWidth.setBinding (&_implicitWidth_binding);
    // Behavior on x { NumberAnimation { duration: 150 } }
    // line 77  "Switch.qml"
    behavior.on(&image_3.x);
}

} // namespace QtQuick
} // namespace Controls
} // namespace StyleDefault
