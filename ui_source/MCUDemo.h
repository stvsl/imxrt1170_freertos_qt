// This code is auto-generated by Qul's qmltocpp tool from the file 'MCUDemo.qml'
// WARNING! All changes made in this file will be lost!
// NOTE: This generated API is to be considered implementation detail for Qul.
//       It may change from version to version and should not be relied upon.
#pragma once
#include "/home/stvsl/Documents/DOTRUST/MCUDemo/MCUDemo/src/daemon/Daemon.h"
#include <platforminterface/log.h>
#include <qul/image.h>
#include <qul/private/animation.h>
#include <qul/private/builtins.h>
#include <qul/private/file.h>
#include <qul/private/items.h>
#include <qul/private/items/text.h>
#include <qul/private/qulrcc_lookup.h>
#include <qul/private/timeritem.h>
#include <qul/private/unicodestring.h>
#include <qul/signal.h>


struct MCUDemo : Qul::Private::Items::Rectangle , public Qul::Private::Items::ItemBase ::ExtraStorage_itemExtraProperties<Qul::Private::Items::Rectangle  >, public Qul::Private::Items::Rectangle ::ExtraStorage_rectangleExtraProperties<Qul::Private::Items::Rectangle  > {
    MCUDemo();


    Qul::Property<Qul::Private::String> state;
    struct rotationanimation_RotationAnimation : Qul::Private::Items::RotationAnimation , public Qul::Private::Items::Animation ::ExtraStorage_animationExtraProperties<Qul::Private::Items::RotationAnimation  > {
        rotationanimation_RotationAnimation()
            : Qul::Private::Items::Animation ::ExtraStorage_animationExtraProperties<Qul::Private::Items::RotationAnimation  >(this)
        {}
    } rotationanimation;
    typedef Qul::Private::Items::Image  image_Image;
    image_Image image;
    typedef Qul::Private::Items::Timer  timer_Timer;
    timer_Timer timer;
    typedef Qul::Private::Items::TextLight  text__Text;
    text__Text text_;
    typedef Qul::Private::Items::MouseArea  mousearea_MouseArea;
    mousearea_MouseArea mousearea;
    struct image_x_anchor_bindingFunctor {
    int operator()(MCUDemo *self) const;
};
    Qul::Private::Binding<image_x_anchor_bindingFunctor, 2> image_x_anchor_binding;
    struct image_y_anchor_bindingFunctor {
    int operator()(MCUDemo *self) const;
};
    Qul::Private::Binding<image_y_anchor_bindingFunctor, 2> image_y_anchor_binding;
    
    struct MCUDemo_3061336939_bindingFunctor {
        MCUDemo *self;
        MCUDemo_3061336939_bindingFunctor (MCUDemo *self_) : self(self_) {}
        void operator()() const;
    };
    
    static void timer_onTriggered_binding_slot(MCUDemo *self ) {
        return MCUDemo_3061336939_bindingFunctor(self)();
    }
    
    Qul::Private::Slot< MCUDemo, void() > timer_onTriggered_binding;
    struct text__x_anchor_bindingFunctor {
    int operator()(MCUDemo *self) const;
};
    Qul::Private::Binding<text__x_anchor_bindingFunctor, 2> text__x_anchor_binding;
    struct text__y_anchor_bindingFunctor {
    int operator()(MCUDemo *self) const;
};
    Qul::Private::Binding<text__y_anchor_bindingFunctor, 2> text__y_anchor_binding;
    struct MCUDemo_1280003633_bindingFunctor {
        Qul::Private::String operator()(MCUDemo *self) const;
    };
    Qul::Private::Binding<MCUDemo_1280003633_bindingFunctor, 0> text__text_binding;
    
    struct MCUDemo_1329321080_bindingFunctor {
        MCUDemo *self;
        MCUDemo_1329321080_bindingFunctor (MCUDemo *self_) : self(self_) {}
        void operator()(Qul::Private::Builtins::MouseEvent * mouse) const;
    };
    
    static void mousearea_onClicked_binding_slot(MCUDemo *self,  Qul::Private::Builtins::MouseEvent * mouse) {
        return MCUDemo_1329321080_bindingFunctor(self)(mouse);
    }
    
    Qul::Private::Slot< MCUDemo, void(Qul::Private::Builtins::MouseEvent *) > mousearea_onClicked_binding;
    struct mousearea_width_anchor_bindingFunctor {
    int operator()(MCUDemo *self) const;
};
    Qul::Private::Binding<mousearea_width_anchor_bindingFunctor, 1> mousearea_width_anchor_binding;
    struct mousearea_height_anchor_bindingFunctor {
    int operator()(MCUDemo *self) const;
};
    Qul::Private::Binding<mousearea_height_anchor_bindingFunctor, 1> mousearea_height_anchor_binding;
};

