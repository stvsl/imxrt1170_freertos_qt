/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_DEVICEINFORMATIONEXCHANGEPROTOCOL_PB_H_INCLUDED
#define PB_DEVICEINFORMATIONEXCHANGEPROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ConsoleLog {
    char data[80];
} ConsoleLog;

typedef struct _TouchEvent {
    int32_t x;
    int32_t y;
    uint32_t timestamp;
} TouchEvent;

typedef struct _TouchSequence {
    pb_size_t touchEvents_count;
    TouchEvent touchEvents[5];
} TouchSequence;

typedef struct _GetFramebufferData {
    int32_t platformId;
} GetFramebufferData;

typedef struct _HostToDeviceMessage {
    pb_size_t which_alternative;
    union {
        TouchSequence touchSequence;
        GetFramebufferData getFramebufferData;
    } alternative;
} HostToDeviceMessage;

typedef PB_BYTES_ARRAY_T(180) DataTransfer_data_t;
typedef struct _DataTransfer {
    DataTransfer_data_t data;
} DataTransfer;

typedef struct _DataTransferDone {
    char dummy_field;
} DataTransferDone;

typedef struct _DataTransferFailed {
    char dummy_field;
} DataTransferFailed;

typedef struct _DeviceToHostMessage {
    pb_size_t which_alternative;
    union {
        ConsoleLog consoleLog;
        DataTransfer dataTransfer;
        DataTransferDone dataTransferDone;
        DataTransferFailed dataTransferFailed;
    } alternative;
} DeviceToHostMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define HostToDeviceMessage_init_default         {0, {TouchSequence_init_default}}
#define DeviceToHostMessage_init_default         {0, {ConsoleLog_init_default}}
#define ConsoleLog_init_default                  {""}
#define TouchSequence_init_default               {0, {TouchEvent_init_default, TouchEvent_init_default, TouchEvent_init_default, TouchEvent_init_default, TouchEvent_init_default}}
#define TouchEvent_init_default                  {0, 0, 0}
#define GetFramebufferData_init_default          {0}
#define DataTransfer_init_default                {{0, {0}}}
#define DataTransferDone_init_default            {0}
#define DataTransferFailed_init_default          {0}
#define HostToDeviceMessage_init_zero            {0, {TouchSequence_init_zero}}
#define DeviceToHostMessage_init_zero            {0, {ConsoleLog_init_zero}}
#define ConsoleLog_init_zero                     {""}
#define TouchSequence_init_zero                  {0, {TouchEvent_init_zero, TouchEvent_init_zero, TouchEvent_init_zero, TouchEvent_init_zero, TouchEvent_init_zero}}
#define TouchEvent_init_zero                     {0, 0, 0}
#define GetFramebufferData_init_zero             {0}
#define DataTransfer_init_zero                   {{0, {0}}}
#define DataTransferDone_init_zero               {0}
#define DataTransferFailed_init_zero             {0}

/* Field tags (for use in manual encoding/decoding) */
#define ConsoleLog_data_tag                      1
#define TouchEvent_x_tag                         1
#define TouchEvent_y_tag                         2
#define TouchEvent_timestamp_tag                 3
#define TouchSequence_touchEvents_tag            1
#define GetFramebufferData_platformId_tag        1
#define HostToDeviceMessage_touchSequence_tag    1
#define HostToDeviceMessage_getFramebufferData_tag 2
#define DataTransfer_data_tag                    1
#define DeviceToHostMessage_consoleLog_tag       1
#define DeviceToHostMessage_dataTransfer_tag     2
#define DeviceToHostMessage_dataTransferDone_tag 3
#define DeviceToHostMessage_dataTransferFailed_tag 4

/* Struct field encoding specification for nanopb */
#define HostToDeviceMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (alternative,touchSequence,alternative.touchSequence),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (alternative,getFramebufferData,alternative.getFramebufferData),   2)
#define HostToDeviceMessage_CALLBACK NULL
#define HostToDeviceMessage_DEFAULT NULL
#define HostToDeviceMessage_alternative_touchSequence_MSGTYPE TouchSequence
#define HostToDeviceMessage_alternative_getFramebufferData_MSGTYPE GetFramebufferData

#define DeviceToHostMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (alternative,consoleLog,alternative.consoleLog),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (alternative,dataTransfer,alternative.dataTransfer),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (alternative,dataTransferDone,alternative.dataTransferDone),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (alternative,dataTransferFailed,alternative.dataTransferFailed),   4)
#define DeviceToHostMessage_CALLBACK NULL
#define DeviceToHostMessage_DEFAULT NULL
#define DeviceToHostMessage_alternative_consoleLog_MSGTYPE ConsoleLog
#define DeviceToHostMessage_alternative_dataTransfer_MSGTYPE DataTransfer
#define DeviceToHostMessage_alternative_dataTransferDone_MSGTYPE DataTransferDone
#define DeviceToHostMessage_alternative_dataTransferFailed_MSGTYPE DataTransferFailed

#define ConsoleLog_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   data,              1)
#define ConsoleLog_CALLBACK NULL
#define ConsoleLog_DEFAULT NULL

#define TouchSequence_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  touchEvents,       1)
#define TouchSequence_CALLBACK NULL
#define TouchSequence_DEFAULT NULL
#define TouchSequence_touchEvents_MSGTYPE TouchEvent

#define TouchEvent_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    x,                 1) \
X(a, STATIC,   REQUIRED, INT32,    y,                 2) \
X(a, STATIC,   REQUIRED, UINT32,   timestamp,         3)
#define TouchEvent_CALLBACK NULL
#define TouchEvent_DEFAULT NULL

#define GetFramebufferData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    platformId,        1)
#define GetFramebufferData_CALLBACK NULL
#define GetFramebufferData_DEFAULT NULL

#define DataTransfer_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BYTES,    data,              1)
#define DataTransfer_CALLBACK NULL
#define DataTransfer_DEFAULT NULL

#define DataTransferDone_FIELDLIST(X, a) \

#define DataTransferDone_CALLBACK NULL
#define DataTransferDone_DEFAULT NULL

#define DataTransferFailed_FIELDLIST(X, a) \

#define DataTransferFailed_CALLBACK NULL
#define DataTransferFailed_DEFAULT NULL

extern const pb_msgdesc_t HostToDeviceMessage_msg;
extern const pb_msgdesc_t DeviceToHostMessage_msg;
extern const pb_msgdesc_t ConsoleLog_msg;
extern const pb_msgdesc_t TouchSequence_msg;
extern const pb_msgdesc_t TouchEvent_msg;
extern const pb_msgdesc_t GetFramebufferData_msg;
extern const pb_msgdesc_t DataTransfer_msg;
extern const pb_msgdesc_t DataTransferDone_msg;
extern const pb_msgdesc_t DataTransferFailed_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define HostToDeviceMessage_fields &HostToDeviceMessage_msg
#define DeviceToHostMessage_fields &DeviceToHostMessage_msg
#define ConsoleLog_fields &ConsoleLog_msg
#define TouchSequence_fields &TouchSequence_msg
#define TouchEvent_fields &TouchEvent_msg
#define GetFramebufferData_fields &GetFramebufferData_msg
#define DataTransfer_fields &DataTransfer_msg
#define DataTransferDone_fields &DataTransferDone_msg
#define DataTransferFailed_fields &DataTransferFailed_msg

/* Maximum encoded size of messages (where known) */
#define ConsoleLog_size                          81
#define DataTransferDone_size                    0
#define DataTransferFailed_size                  0
#define DataTransfer_size                        183
#define DeviceToHostMessage_size                 186
#define GetFramebufferData_size                  11
#define HostToDeviceMessage_size                 153
#define TouchEvent_size                          28
#define TouchSequence_size                       150

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
